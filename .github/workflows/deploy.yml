name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages with retry
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 900000  # 15 minutes
          error_count: 3   # Reduce error count for faster failure detection
          reporting_interval: 10000  # Report every 10 seconds
        continue-on-error: true
      
      - name: Retry deployment if failed
        if: steps.deployment.outcome == 'failure'
        id: retry-deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000  # 10 minutes for retry
          error_count: 2
          reporting_interval: 15000
        continue-on-error: true
      
      - name: Final deployment attempt
        if: steps.retry-deployment.outcome == 'failure'
        id: final-deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 300000  # 5 minutes for final attempt
          error_count: 1
          reporting_interval: 20000
      
      - name: Check deployment status
        run: |
          if [[ "${{ steps.deployment.outcome }}" == "success" ]]; then
            echo "✅ Deployment successful on first attempt"
            echo "Page URL: ${{ steps.deployment.outputs.page_url }}"
          elif [[ "${{ steps.retry-deployment.outcome }}" == "success" ]]; then
            echo "✅ Deployment successful on retry"
            echo "Page URL: ${{ steps.retry-deployment.outputs.page_url }}"
          elif [[ "${{ steps.final-deployment.outcome }}" == "success" ]]; then
            echo "✅ Deployment successful on final attempt"
            echo "Page URL: ${{ steps.final-deployment.outputs.page_url }}"
          else
            echo "❌ All deployment attempts failed"
            exit 1
          fi